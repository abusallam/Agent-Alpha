version: '3.9'

networks:
  agents-net:
    driver: bridge

services:
  agent_zero:
    build:
      context: ./agent_zero_base
      dockerfile: docker/run/Dockerfile
      args:
        - BRANCH=main
    ports:
      - "8081:8080"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - REDIS_URL=redis://redis:6379/0
      - AGENT_ALPHA_URL=http://agent_alpha:8000
      - RESEARCH_AGENT_URL=http://research_agent:8000
    depends_on:
      - livekit
      - redis
      - agent_alpha
      - agent_alpha_frontend
      - research_agent_webwalker_ui
      - research_agent_webwalker_api
      - research_agent_webdancer_ui
      - research_agent_webdancer_api
    networks:
      - agents-net
    restart: unless-stopped

  agent_alpha_frontend:
    build:
      context: ./alpha_agent/frontend
      dockerfile: Dockerfile
    ports:
      - "8082:80"
    networks:
      - agents-net
    restart: unless-stopped

  agent_alpha:
    build:
      context: ./alpha_agent/backend
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    networks:
      - agents-net
    restart: unless-stopped

  research_agent_webwalker_ui:
    build:
      context: ./research_agent/WebWalker
      dockerfile: Dockerfile
    ports:
      - "7860:8501"
    environment:
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL_SERVER=${OPENAI_MODEL_SERVER}
    networks:
      - agents-net
    restart: unless-stopped

  research_agent_webwalker_api:
    build:
      context: ./research_agent/WebWalker
      dockerfile: Dockerfile
    command: uvicorn src.api_wrapper:app --host 0.0.0.0 --port 8000
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL_SERVER=${OPENAI_MODEL_SERVER}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
    networks:
      - agents-net
    restart: unless-stopped

  research_agent_webdancer_ui:
    build:
      context: ./research_agent/WebDancer
      dockerfile: Dockerfile
    ports:
      - "7861:7860"
    environment:
      - GOOGLE_SEARCH_KEY=${GOOGLE_SEARCH_KEY}
      - JINA_API_KEY=${JINA_API_KEY}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - WEBDANCER_LLM_BACKEND_TYPE=${WEBDANCER_LLM_BACKEND_TYPE:-DASHSCOPE_QWEN}
      - WEBDANCER_QWEN_MODEL=${WEBDANCER_QWEN_MODEL:-qwen-max}
      - WEBDANCER_OAI_MODEL_SERVER=${WEBDANCER_OAI_MODEL_SERVER}
      - WEBDANCER_OAI_MODEL_NAME=${WEBDANCER_OAI_MODEL_NAME}
      - WEBDANCER_OAI_API_KEY=${WEBDANCER_OAI_API_KEY:-EMPTY}
    networks:
      - agents-net
    restart: unless-stopped

  research_agent_webdancer_api:
    build:
      context: ./research_agent/WebDancer
      dockerfile: Dockerfile
    command: uvicorn demos.api_wrapper:app --host 0.0.0.0 --port 8001
    environment:
      - GOOGLE_SEARCH_KEY=${GOOGLE_SEARCH_KEY}
      - JINA_API_KEY=${JINA_API_KEY}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - WEBDANCER_LLM_BACKEND_TYPE=${WEBDANCER_LLM_BACKEND_TYPE:-DASHSCOPE_QWEN}
      - WEBDANCER_QWEN_MODEL=${WEBDANCER_QWEN_MODEL:-qwen-max}
      - WEBDANCER_OAI_MODEL_SERVER=${WEBDANCER_OAI_MODEL_SERVER}
      - WEBDANCER_OAI_MODEL_NAME=${WEBDANCER_OAI_MODEL_NAME}
      - WEBDANCER_OAI_API_KEY=${WEBDANCER_OAI_API_KEY:-EMPTY}
    networks:
      - agents-net
    restart: unless-stopped

  sglang_server_websailor:
    build:
      context: ./research_agent/WebSailor
      dockerfile: Dockerfile
    command: >
      sh -c "
      echo 'Starting SGLang server for WebSailor... Model: $$WEBSAILOR_SGLANG_MODEL_IDENTIFIER';
      python -m sglang.launch_server \
        --model-path $$WEBSAILOR_SGLANG_MODEL_IDENTIFIER \
        --host 0.0.0.0 \
        --port 6001 \
        --tp ${WEBSAILOR_SGLANG_TP_SIZE:-1}
      "
    environment:
      - WEBSAILOR_SGLANG_MODEL_IDENTIFIER=${WEBSAILOR_SGLANG_MODEL_IDENTIFIER}
      - WEBSAILOR_SGLANG_TP_SIZE=${WEBSAILOR_SGLANG_TP_SIZE:-1}
    volumes:
      - ./models:/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - agents-net
    restart: unless-stopped

  research_agent_websailor_api:
    build:
      context: ./research_agent/WebSailor
      dockerfile: Dockerfile
    command: uvicorn src.api_wrapper:app --host 0.0.0.0 --port 8002
    environment:
      - WEBSAILOR_SGLANG_MODEL_IDENTIFIER=${WEBSAILOR_SGLANG_MODEL_IDENTIFIER}
      - WEBSAILOR_LLM_LOCAL_PATH_FOR_TOKENIZER=${WEBSAILOR_LLM_LOCAL_PATH_FOR_TOKENIZER}
      - WEBSAILOR_MAX_LLM_CALLS=${WEBSAILOR_MAX_LLM_CALLS:-20}
      - WEBSAILOR_TEMPERATURE=${WEBSAILOR_TEMPERATURE:-0.6}
      - WEBSAILOR_TOP_P=${WEBSAILOR_TOP_P:-0.95}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - JINA_API_KEY=${JINA_API_KEY}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
    depends_on:
      - sglang_server_websailor
    networks:
      agents-net: {}
    restart: unless-stopped

  livekit:
    image: livekit/livekit-server:latest
    ports:
      - "7880:7880"
      - "7881:7881"
    environment:
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
    networks:
      - agents-net
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - agents-net
    restart: unless-stopped
